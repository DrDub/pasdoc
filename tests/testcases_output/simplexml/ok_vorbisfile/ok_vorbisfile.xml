<unit name="ok_vorbisfile.pas">
  <description><detailed>API of vorbisfile library. Usually libvorbisfile.so under Unixes or vorbisfile.dll under Windows. This is just a quick translation of /usr/include/vorbis/vorbisfile.h header.</detailed></description>
  <constant name="NOTOPEN" declaration="NOTOPEN   = 0;">
  </constant>
  <constant name="PARTOPEN" declaration="PARTOPEN  = 1;">
  </constant>
  <constant name="OPENED" declaration="OPENED    = 2;">
  </constant>
  <constant name="STREAMSET" declaration="STREAMSET = 3;">
  </constant>
  <constant name="INITSET" declaration="INITSET   = 4;">
  </constant>
  <variable name="ov_clear" declaration="ov_clear: function(Vf: POggVorbis_File): CInt; cdecl;">
  </variable>
  <variable name="VorbisFileInited" declaration="VorbisFileInited: boolean;">
  </variable>
  <type name="TSizeT" declaration="TSizeT = LongWord;">
  </type>
  <type name="TVorbisFileReadFunc" declaration="TVorbisFileReadFunc = function (ptr: Pointer; Size: TSizeT; nmemb: TSizeT; DataSource: Pointer): TSizeT; cdecl;">
  </type>
  <type name="TVorbisFileSeekFunc" declaration="TVorbisFileSeekFunc = function (DataSource: Pointer; offset: Int64; whence: CInt): CInt; cdecl;">
  </type>
  <type name="TVorbisFileCloseFunc" declaration="TVorbisFileCloseFunc = function (DataSource: Pointer): CInt; cdecl;">
  </type>
  <type name="TVorbisFileTellFunc" declaration="TVorbisFileTellFunc = function (DataSource: Pointer): CLong; cdecl;">
  </type>
  <type name="Pov_callbacks" declaration="Pov_callbacks = ^Tov_callbacks;">
  </type>
  <type name="POggVorbis_File" declaration="POggVorbis_File = ^TOggVorbis_File;">
  </type>
  <structure name="Tov_callbacks" name_with_generic="Tov_callbacks" type="record">
    <variable name="read_func" declaration="read_func: TVorbisFileReadFunc;">
    </variable>
    <variable name="seek_func" declaration="seek_func: TVorbisFileSeekFunc;">
    </variable>
    <variable name="close_func" declaration="close_func: TVorbisFileCloseFunc;">
    </variable>
    <variable name="tell_func" declaration="tell_func: TVorbisFileTellFunc;">
    </variable>
  </structure>
  <structure name="TOggVorbis_File" name_with_generic="TOggVorbis_File" type="record">
    <variable name="datasource" declaration="datasource: Pointer;">
    </variable>
    <variable name="seekable" declaration="seekable: Cint;">
      <description><detailed>* Pointer to a FILE *, etc. *</detailed></description>
    </variable>
    <variable name="offset" declaration="offset: Int64;">
    </variable>
    <variable name="_end" declaration="_end: Int64;">
    </variable>
    <variable name="oy" declaration="oy: Togg_sync_state;">
    </variable>
    <variable name="links" declaration="links: Cint;">
    </variable>
    <variable name="offsets" declaration="offsets: PInt64;">
    </variable>
    <variable name="dataoffsets" declaration="dataoffsets: PInt64;">
    </variable>
    <variable name="serialnos" declaration="serialnos: PCLong;">
    </variable>
    <variable name="pcmlengths" declaration="pcmlengths: PInt64;">
    </variable>
    <variable name="vi" declaration="vi: Pvorbis_info;">
      <description><detailed>* overloaded to maintain binary compatability; x2 size, stores both beginning and end values *</detailed></description>
    </variable>
    <variable name="vc" declaration="vc: Pvorbis_comment;">
    </variable>
    <variable name="pcm_offset" declaration="pcm_offset: Int64;">
      <description><detailed>* Decoding working state local storage *</detailed></description>
    </variable>
    <variable name="ready_state" declaration="ready_state: CInt;">
    </variable>
    <variable name="current_serialno" declaration="current_serialno: Clong;">
    </variable>
    <variable name="current_link" declaration="current_link: CInt;">
    </variable>
    <variable name="bittrack" declaration="bittrack: double;">
    </variable>
    <variable name="samptrack" declaration="samptrack: double;">
    </variable>
    <variable name="os" declaration="os: Togg_stream_state;">
    </variable>
    <variable name="vd" declaration="vd: Tvorbis_dsp_state;">
      <description><detailed>* take physical pages, weld into a logical stream of packets *</detailed></description>
    </variable>
    <variable name="vb" declaration="vb: Tvorbis_block;">
      <description><detailed>* central working state for the packet-&gt;PCM decoder *</detailed></description>
    </variable>
    <variable name="callbacks" declaration="callbacks: Tov_callbacks;">
      <description><detailed>* local working space for packet-&gt;PCM decode *</detailed></description>
    </variable>
  </structure>
</unit>
